:root {
  --background-color: #faa6a4;
  --past-color: #eacecb;
  --modal-color: white;
  --modal-border: gray;
}

body {
  background-color: var(--background-color);
  font-family: Arial, Helvetica, sans-serif;
  margin: 0;
}

#container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3.5em;
}

.guesses {
  font-size: 4svmin;
  text-align: center;
  margin: 1em;
  height: 4em;
}

span.join {
  color: var(--past-color);
}

.row {
  display: flex;
  text-align: center;
  justify-content: center;
}

.fill {
  width: 100%;
}

#letter-box {
  margin: auto;
  width: 100svmin;
  height: 100svmin;
}

#letter-box path, #letter-box circle, #letter-box rect {
  /* Within context of an SVG, this is px in SVG space, not HTML doc space */
  stroke-width: 5px;
}

#letter-box rect {
  stroke: black;
}

#letter-box path {
  stroke: black;
}

#letter-box path.active {
  stroke: var(--background-color);
  stroke-dasharray: 4% 4%;
  /* FIXME: should cover a past path with white */
}

#letter-box path.past {
  stroke: var(--past-color);
}

#letter-box circle {
  fill: white;
  stroke: black;
}

#letter-box circle.past {
  fill: var(--background-color);
  stroke: black;
}

#letter-box circle.active {
  fill: white;
  stroke: var(--background-color);
}

#letter-box circle.lead {
  fill: black;
  stroke: var(--background-color);
}

#letter-box text {
  /* Within context of an SVG, this is px in SVG space, not HTML doc space */
  font-size: 60px;
  text-anchor: middle;
  font-family: Arial, Helvetica, sans-serif;
  fill: white;
}

#letter-box text.past, #letter-box text.active {
  fill: black;
}

#letter-box text.active {
  font-weight: bold;
}

#currentGuess {
  background-color: var(--background-color);
  border: none;
  border-bottom: calc(max(0.1em, 2px)) solid black;
  font-size: 8svmin;
  font-weight: bolder;
  outline: none;
  text-align: center;
  padding: 0;
  height: 1.5em;
}

.modal {
  position: absolute;
  top: 0;
  overflow: scroll;
  background: var(--modal-color);
  padding: 1em;
  margin: 0.5em;
  border: var(--modal-border) 0.1em solid;
  border-radius: 0.5em;
  display: none;
}

.modal.open {
  display: block;
}

.modal * {
  text-align: left;
}

.modal .closeButton {
  position: absolute;
  top: 0.3em;
  right: 0.3em;
  font-size: 8svmin;
  background: var(--modal-background);
  border: none;
}

.modal h1 {
  font-size: 8svmin;
}

#buttonRow {
  display: flex;
  flex-wrap: wrap;
  max-width: 500px;
  justify-content: center;
  gap: 1em;
  margin-top: 2em;
}

#buttonRow button {
  font-size: 4svmin;
  color: black;
  background-color: var(--background-color);
  border: calc(max(0.1em, 1px)) solid black;
  border-radius: 1.5em;
  width: 6em;
  height: 3em;
}

#buttonRow #helpButton {
  /* Put this on the right, out of flow with the rest. */
  position: absolute;
  right: 1em;
  width: 2em;
  height: 2em;
  margin-top: 0.5em;

  @media only screen and (max-width: 650px) {
    /* On small screens, put it where it would naturally go in the flow. */
    position: relative;
    right: auto;
  }
}

#helpModal ul {
  padding-inline-start: 1em;
}

#wonModal {
  padding: 2em;
  top: 9em;
}

#wonModal h1 {
  text-align: center;
}

.bigIcon {
  text-align: center;
  font-size: 20svmin;
}

.overlay-host {
  position: relative;
}

#errorOverlay {
  position: absolute;
  top: 0;
  width: 100%;
  opacity: 0;
}

#errorOverlay.active {
  animation: fadeInAndOut 2s;
}

@keyframes fadeInAndOut {
  0% {
    opacity: 0;
  }

  10% {
    opacity: 1;
  }

  90% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

#errorMessage {
  display: inline-block;
  margin: auto;

  background: black;
  color: white;

  padding: 0.5em 1.5em;
  font-size: 4svmin;
}
