:root {
  --background-color: #faa6a4;
  --past-color: #eacecb;
  --modal-color: white;
  --modal-border: gray;
}

body {
  background-color: var(--background-color);
  font-family: Arial, Helvetica, sans-serif;
  margin: 0;
  font-size: 4svmin;
}

h1 {
  font-size: 6svmin;
  margin: 0;
}

h1.poetry {
  font-size: 4svmin;
}

h2 {
  font-size: 3svmin;
  margin: 0;
}

button {
  cursor: pointer;
}

.hidden {
  display: none !important;
}

#container {
  padding: 3.5em;
  padding-bottom: 1em;
}

#container, #gameContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.authorImage {
  height: 2em;
  vertical-align: middle;
}

.guesses {
  font-size: 4svmin;
  text-align: center;
  margin: 1em;
  height: 4em;
}

span.join {
  color: var(--past-color);
}

.column {
  display: flex;
  text-align: center;
  justify-content: center;
  flex-direction: column;
}

.fill {
  width: 100%;
}

.letter-box {
  display: block;
  margin: auto;
  max-height: 70svh;
}

.letter-box path, .letter-box circle, .letter-box rect {
  /* Within context of an SVG, this is px in SVG space, not HTML doc space */
  stroke-width: 5px;
}

.letter-box rect {
  stroke: black;
}

.letter-box path {
  stroke: black;
}

.letter-box path.active {
  stroke: var(--background-color);
  stroke-dasharray: 4% 4%;
}

/* Underlay for each active path to make sure the white parts of the dashed
 * line are white and not transparent: */
.letter-box path.active.under {
  stroke: white;
  stroke-dasharray: none;
}

.letter-box path.past {
  stroke: var(--past-color);
}

.letter-box circle {
  fill: white;
  stroke: black;
  cursor: pointer;
}

.letter-box circle.past {
  fill: var(--background-color);
  stroke: black;
}

.letter-box circle.active {
  fill: white;
  stroke: var(--background-color);
}

.letter-box circle.lead {
  fill: black;
  stroke: var(--background-color);
}

.letter-box text {
  /* Within context of an SVG, this is px in SVG space, not HTML doc space */
  font-size: 60px;
  text-anchor: middle;
  font-family: Arial, Helvetica, sans-serif;
  fill: white;
}

.letter-box text.past, .letter-box text.active {
  fill: black;
}

.letter-box text.active {
  font-weight: bold;
}

#currentGuess {
  background-color: var(--background-color);
  border: none;
  border-bottom: calc(max(0.1em, 2px)) solid black;
  font-size: 8svmin;
  font-weight: bolder;
  outline: none;
  text-align: center;
  padding: 0;
  height: 1.5em;
}

.modal {
  position: absolute;
  top: 0;
  background: var(--modal-color);
  padding: 1em;
  margin: 0.5em;
  border: var(--modal-border) 0.1em solid;
  border-radius: 0.5em;
  display: none;
}

.modal.open {
  display: block;
}

.modal * {
  text-align: left;
}

.modal .closeButton {
  position: absolute;
  top: 0.3em;
  right: 0.3em;
  font-size: 8svmin;
  background: var(--modal-background);
  border: none;
}

.modal h1 {
  margin: 0 10% 1em 10%;
  text-align: center;
  font-size: 8svmin;
}

.modal h2 {
  margin: 1em 10%;
  text-align: center;
  font-size: 4svmin;
}

#buttonRow {
  display: flex;
  flex-wrap: wrap;
  max-width: 500px;
  justify-content: center;
  gap: 1em;
  margin: auto;
  margin-top: 2em;
}

#buttonRow button {
  font-size: calc(min(max(4svmin, 16px), 20px));
  color: black;
  background-color: var(--background-color);
  border: calc(max(0.1em, 1px)) solid black;
  border-radius: 1.5em;
  width: 6em;
  height: 3em;
}

#buttonRow #helpButton {
  /* Put this on the right, out of flow with the rest. */
  position: absolute;
  right: 1em;
  width: 2em;
  height: 2em;
  margin-top: 0.5em;
}

#buttonRow #yesterdayButton {
  /* Put this on the top-right, out of flow with the rest. */
  position: absolute;
  top: 1em;
  right: 1em;
  width: 10em;
  height: 2em;
}

@media only screen and (max-width: 650px) {
  /* On small screens, put the help button where it would naturally go in the
   * flow. */
  #buttonRow #helpButton {
    position: relative;
    right: auto;
  }
}

@media only screen and (max-width: 350px) {
  /* On even smaller screens, put each button in their own row. */
  #buttonRow {
    flex-direction: column;
    align-items: center;
  }
}

#helpModal ul {
  padding-inline-start: 1em;
}

#helpModal #example-game {
  max-height: 40svh;
  margin: auto;
  display: block;
}

#wonModal {
  padding: 2em;
  top: 9em;
}

#wonModal p {
  text-align: center;
}

.bigIcon {
  text-align: center;
  font-size: 20svmin;
}

.overlay-host {
  position: relative;
}

#errorOverlay {
  position: absolute;
  top: 0;
  width: 100%;
  opacity: 0;
}

#errorOverlay.fatal {
  opacity: 1;
  animation: none !important;
}

#errorOverlay.active {
  animation: fadeInAndOut 2s;
}

@keyframes fadeInAndOut {
  0% {
    opacity: 0;
  }

  10% {
    opacity: 1;
  }

  90% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

#errorMessage {
  display: inline-block;
  margin: auto;

  background: black;
  color: white;

  padding: 0.5em 1.5em;
  font-size: 4svmin;
}

#small-screen-error {
  display: none;
  padding: 0 1em;
}

#menu {
  position: fixed;

  top: 0;
  height: 100%;
  box-sizing: border-box; /* Include border in 100% height */
  padding: 1em;
  border: 3px black ridge;
  background-color: white;

  left: -15em;
  transition: left 0.5s ease-in;
  overflow: hidden;
}

#menu.open {
  left: 0;
}

#menuButton {
  position: fixed;
  display: inline-block;

  top: 1em;
  left: 1em;

  cursor: pointer;
  user-select: none;
}

#menuItems {
  padding-top: 0.5em;
}

#menuItems ul {
  padding-left: 1em;
  margin-right: 1em;
  line-height: 1.5;
}

#menu a, #archive a {
  color: black;
  text-decoration: none;
}

#menu a:hover, #archive a:hover {
  color: dimgray;
}

@media only screen and (orientation: landscape) and (max-height: 500px) {
  #small-screen-error {
    display: block;
    text-align: center;
    font-size: 10svmin;
  }
  #container {
    display: none;
  }
}

/* Layout changes for large desktop screens */
@media only screen and (orientation: landscape) and (min-width: 650px) {
  #container {
    padding: 2em 3.5em;
  }

  #gameContainer {
    /* Place input and game board side-by-side. */
    flex-direction: row;
    align-items: flex-start;
    gap: 2em;
  }

  #wonModal {
    top: 4em;
  }
}
